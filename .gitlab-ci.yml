stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE_TASKS: $CI_REGISTRY/$CI_PROJECT_PATH/tasks-service
  CI_REGISTRY_IMAGE_USER: $CI_REGISTRY/$CI_PROJECT_PATH/user-service
  CI_REGISTRY_IMAGE_WEBAPP: $CI_REGISTRY/$CI_PROJECT_PATH/webapp

services:
  - docker:24.0.5-dind

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE_TASKS:latest tasks-service/
    - docker build -t $CI_REGISTRY_IMAGE_USER:latest user-service/
    - docker build -t $CI_REGISTRY_IMAGE_WEBAPP:latest webapp/
    - docker push $CI_REGISTRY_IMAGE_TASKS:latest
    - docker push $CI_REGISTRY_IMAGE_USER:latest
    - docker push $CI_REGISTRY_IMAGE_WEBAPP:latest

test:
  stage: test
  script:
    - docker run $CI_REGISTRY_IMAGE_TASKS:latest sh -c "pytest src/test_task_service.py -v"

deploy:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache openssh-client bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/id_rsa
    - ssh $DEPLOY_USER@$DEPLOY_USER "cd /home/mattew/micro-project && docker-compose -f docker-compose.prod.yml pull && docker-compose -f docker-compose.prod.yml up -d"
  only:
    - main




